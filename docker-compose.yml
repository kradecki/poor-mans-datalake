services:

  #
  # MINIO - A high-performance, AWS S3 compliant object storage
  #
  minio:
    image: minio/minio
    container_name: minio
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DOMAIN=minio
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - ${MINIO_LOCAL_S3_STORAGE}:/data
    networks:
      iceberg_net:
        aliases:
          - minio

  #
  # NESSIE - A metadata catalog service
  #
  nessie:
    image: ghcr.io/projectnessie/nessie
    container_name: nessie
    environment:
      - NESSIE_VERSION_STORE_TYPE=ROCKSDB
      - NESSIE_VERSION_STORE_PERSIST_ROCKS_DATABASE_PATH=/data
    ports:
      - 19120:19120
    volumes:
      - ${NESSIE_LOCAL_CATALOG_PATH}:/data
    networks:
      iceberg_net:
        aliases:
          - nessie

  #
  # TRINO - A distributed SQL query engine
  #
  trino:
    image: trinodb/trino
    container_name: trino
    environment:
      - CATALOG_MANAGEMENT=dynamic
    ports:
      - 8080:8080
      - 8123:8123 # Access to Clickhouse on the host
    volumes:
      - ${TRINO_LOCAL_CATALOG_PATH}:/etc/trino/catalog
    networks:
      iceberg_net:
        aliases:
          - trino

networks:
  iceberg_net:
    driver: bridge

